<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f3a93646-fd82-4146-be48-f5ed710d279f}</ProjectGuid>
    <SHFBSchemaVersion>2015.6.5.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.5.1</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpFileFormat>Markdown</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CleanIntermediates>True</CleanIntermediates>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\bin\WolfCurses.dll" />
<DocumentationSource sourceFile="..\bin\WolfCurses.xml" /></DocumentationSources>
    <BuildLogFile>build.log</BuildLogFile>
    <ProjectSummary>Wolf curses is a console control library for .Net/Mono, enabling the construction of text user interface %28TUI%29 applications. The name is a pun on the term &amp;quot%3bcursor optimization&amp;quot%3b. It is a library of functions that manage an application&amp;#39%3bs display on character-cell terminals %28e.g., Windows Console, Linux/OS X Terminal%29.</ProjectSummary>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <MaximumGroupParts>2</MaximumGroupParts>
    <NamespaceGrouping>True</NamespaceGrouping>
    <SyntaxFilters>C#</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <PresentationStyle>Markdown</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>MemberName</NamingMethod>
    <HelpTitle>WolfCurses API</HelpTitle>
    <FeedbackEMailAddress>ron.mcdowell%40gmail.com</FeedbackEMailAddress>
    <CopyrightText>Created by Ron &amp;#39%3bMaxwolf&amp;#39%3b McDowell</CopyrightText>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <FooterText>Created by Ron &amp;#39%3bMaxwolf&amp;#39%3b McDowell</FooterText>
    <FeedbackEMailLinkText>ron.mcdowell%40gmail.com</FeedbackEMailLinkText>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="WolfCurses" isDocumented="True">Core library, holds the simulation application abstract class. Any new simulations will need to have their primary entry point inherit this class.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses.Control" isDocumented="True">Basic widget rendering for forms and windows that want to build their displays from components rather than text only prompts.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses.Form" isDocumented="True">Attached to windows, forms require you assign their parent window using an attribute so they can be reflected over during runtime.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses.Form.Input" isDocumented="True">Prefab form that deals with user input like a dialog box would. Provides overrides for checking if TRUE or FALSE, also can be configured to just be a prompt and wait for ANY KEY to be pressed to continue.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses.Menu" isDocumented="True">Dynamic menu system that uses enumeration attributes to define what commands are valid for a given window, this is not required and completely optional.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="(global)" isDocumented="True">Wolf curses is a console control library for .Net/Mono, enabling the construction of text user interface (TUI) applications. The name is a pun on the term "cursor optimization". It is a library of functions that manage an application's display on character-cell terminals (e.g., Windows Console, Linux/OS X Terminal).</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses (Group)" isGroup="True" isDocumented="True">Core library, holds the simulation application abstract class. Any new simulations will need to have their primary entry point inherit this class.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="WolfCurses.Form (Group)" isGroup="True" isDocumented="True">Attached to windows, forms require you assign their parent window using an attribute so they can be reflected over during runtime.</NamespaceSummaryItem>
    </NamespaceSummaries>
    <ComponentConfigurations>
      <ComponentConfig id="API Token Resolution" enabled="True">
        <component id="API Token Resolution">{@TokenFiles}
<replace elements="/*//token" item="string(.)" /></component>
      </ComponentConfig>
    </ComponentConfigurations>
    <PlugInConfigurations>
      <PlugInConfig id="Member ID Fix-Ups" enabled="True">
        <configuration>
          <expressions>
            <expression matchExpression="`[0-9]+(\{)" replacementValue="$1" matchAsRegEx="true" />
            <expression matchExpression="(member name=&quot;.*?System\.Collections\.Generic.*?)(\^)" replacementValue="$1" matchAsRegEx="true" />
            <expression matchExpression="cref=&quot;!:([EFGMNPT]|Overload):" replacementValue="cref=&quot;$1:" matchAsRegEx="true" />
            <expression matchExpression="cli\.interior_ptr{([^}]+?)}" replacementValue="$1@!System.Runtime.CompilerServices.IsExplicitlyDereferenced" matchAsRegEx="true" />
          </expressions>
        </configuration>
      </PlugInConfig>
      <PlugInConfig id="Version Builder" enabled="True">
        <configuration>
          <currentProject label="Wolf Curses" version="0.1" ripOldApis="False" />
          <versions />
        </configuration>
      </PlugInConfig>
    </PlugInConfigurations>
    <RootNamespaceTitle>API</RootNamespaceTitle>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>